{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/corona.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mOCqDpJC,EAhDD,SAAC,GAA+D,IAAD,IAA5DC,KAAQC,EAAoD,EAApDA,UAAYC,EAAwC,EAAxCA,UAAYC,EAA4B,EAA5BA,OAASC,EAAmB,EAAnBA,WAEtD,OAAIH,EASA,qBAAKI,UAAYC,IAAOC,UAAxB,SACI,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAU,SAAtC,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAaC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAaW,IAAGV,IAAOW,KAAMX,IAAOY,UAAjF,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,EAA/C,sBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAUyB,MAAOC,SAAU,EAAGC,UAAU,QAEpE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAoC,IAAIQ,KAAKzB,GAAY0B,iBACzD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,qDAGR,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAaC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAaW,IAAGV,IAAOW,KAAMX,IAAOJ,WAAjF,SACI,eAACiB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,EAA/C,uBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKvB,EAAUwB,MAAOC,SAAU,EAAGC,UAAU,QAEpE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAoC,IAAIQ,KAAKzB,GAAY0B,iBACzD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,gDAGR,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAaC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAaW,IAAGV,IAAOW,KAAMX,IAAOH,QAAjF,SACI,eAACgB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAO,gBAAgBC,cAAY,EAA/C,oBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAKtB,EAAOuB,MAAOC,SAAU,EAAGC,UAAU,QAEjE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAoC,IAAIQ,KAAKzB,GAAY0B,iBACzD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,2DArCT,c,yBCPTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DAEjBC,EAAgBJ,EAEjBE,IACCE,EAAa,UAAMJ,EAAN,sBAAuBE,IALnB,kBASwDG,IAAMC,IAAIF,GATlE,2BASTnC,KAASC,EATA,EASAA,UAAYC,EATZ,EASYA,UAAYC,EATxB,EASwBA,OAASC,EATjC,EASiCA,WATjC,kBAWV,CAAEH,YAAYC,YAAYC,SAASC,eAXzB,kCAcjBkC,QAAQC,IAAR,MAdiB,0DAAH,sDAkBTC,EAAc,uCAAG,gCAAAN,EAAA,+EAGDE,IAAMC,IAAN,UAAaN,EAAb,WAHC,uBAGf/B,EAHe,EAGfA,KAEDyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC1C1C,UAAY0C,EAAU1C,UAAU2C,MAChCzC,OAASwC,EAAUxC,OAAOyC,MAC1BC,KAAOF,EAAUG,eARC,kBAWfL,GAXe,yFAAH,qDAmBdM,EAAc,uCAAG,8BAAAb,EAAA,+EAEeE,IAAMC,IAAN,UAAaN,EAAb,eAFf,uBAENiB,EAFM,EAEfhD,KAASgD,UAFM,kBAIfA,EAAUN,KAAI,SAACT,GAAD,OAAaA,EAAQgB,SAJpB,gCAOtBX,QAAQC,IAAR,MAPsB,yDAAH,qD,yBCkCZW,EApED,SAAC,GAAuD,IAAD,IAArDlD,KAAQC,EAA6C,EAA7CA,UAAYC,EAAiC,EAAjCA,UAAYC,EAAqB,EAArBA,OAAQ8B,EAAa,EAAbA,QAAa,EAE9BkB,mBAAS,IAFqB,mBAE1DR,EAF0D,KAE9CS,EAF8C,KAIjEC,qBAAW,YACO,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAMdc,KACF,IAEF,IAAMC,EACFZ,EAAUa,OAEN,cAAC,OAAD,CACAxD,KAAO,CACHyD,OAAQd,EAAUD,KAAI,qBAAEG,QACxBa,SAAW,CAAC,CACR1D,KAAM2C,EAAUD,KAAI,qBAAEzC,aACtB0D,MAAQ,WACRC,YAAa,UACbC,MAAM,GACR,CACE7D,KAAM2C,EAAUD,KAAI,qBAAEvC,UACtBwD,MAAQ,SACRC,YAAa,MACbE,gBAAkB,oBAClBD,MAAM,OAIZ,KAGJE,EACF9D,EAEI,cAAC,MAAD,CACID,KAAQ,CACJyD,OAAQ,CAAC,WAAY,YAAY,UACjCC,SAAW,CAAC,CACRC,MAAO,SACPG,gBAAkB,CACd,qBACA,qBACA,qBAEJ9D,KAAO,CAACC,EAAUyB,MAAMxB,EAAUwB,MAAMvB,EAAOuB,UAGvDsC,QAAW,CACPC,OAAS,CAAEC,SAAU,GACrBC,MAAO,CAACD,SAAU,EAAOE,KAAK,oBAAD,OAAsBnC,OAG3D,KAGR,OACI,qBAAK5B,UAAaC,IAAOC,UAAzB,SACK0B,EAAU8B,EAAWR,K,mCCrCnBc,EAzBO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEInB,mBAAS,IAFb,mBAEtCoB,EAFsC,KAEnBC,EAFmB,KAe7C,OAXAnB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbsC,EADa,SACazB,IADb,6EAAH,qDAIdO,KAEF,CAACkB,IAKC,cAACC,EAAA,EAAD,CAAapE,UAAYC,IAAOoE,YAAhC,SACI,eAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAY,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOrD,QAA9E,UACI,wBAAQA,MAAM,GAAd,oBACC6C,EAAiB7B,KAAI,SAACT,EAAQ+C,GAAT,OAAe,wBAAgBtD,MAAOO,EAAvB,SAAiCA,GAApB+C,Y,iBC3BnD,MAA0B,mCC8C1BC,E,4MApCXC,MAAQ,CACJlF,KAAO,GACPiC,QAAU,I,EASdqC,oB,uCAAsB,WAAMrC,GAAN,eAAAC,EAAA,sEAEQF,EAAUC,GAFlB,OAEZkD,EAFY,OAIlB,EAAKC,SAAS,CAACpF,KAAOmF,EAAalD,QAAUA,IAJ3B,2C,wPALQD,I,OAApBmD,E,OAENE,KAAKD,SAAS,CAACpF,KAAOmF,I,qIAajB,IAAD,EAEqBE,KAAKH,MAAtBlF,EAFJ,EAEIA,KAAKiC,EAFT,EAESA,QAEb,OACI,sBAAK5B,UAAaC,IAAOC,UAAzB,UACI,qBAAKF,UAAWC,IAAOgF,MAASC,IAAMC,EAAaC,IAAI,aACvD,cAAC,EAAD,CAAOzF,KAAQA,IACf,cAAC,EAAD,CAAesE,oBAAsBe,KAAKf,sBAC1C,cAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAAWA,W,GAhC5ByD,IAAMC,WCHxBC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,U,mBCJlDlG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,sC","file":"static/js/main.50b0011d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1PMmW\",\"card\":\"Cards_card__1lRmH\",\"infected\":\"Cards_infected__36WGn\",\"recovered\":\"Cards_recovered__3t4nJ\",\"deaths\":\"Cards_deaths__3nx5T\"};","import React from 'react';\r\nimport { Card , CardContent , Typography , Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup'; \r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data :{ confirmed , recovered , deaths , lastUpdate } }) => {\r\n\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n\r\n    //console.log(props);\r\n\r\n    \r\n\r\n    return(\r\n        <div className= {styles.container}>\r\n            <Grid container spacing={3} justify = 'center'>\r\n                <Grid item component = {Card} xs={12} md={3} className= { cx(styles.card, styles.infected) } >\r\n                    <CardContent>\r\n                        <Typography color= 'textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={confirmed.value} duration={2} separator=',' />\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant='body2'>Number of Active Cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className= { cx(styles.card, styles.recovered) } >\r\n                    <CardContent>\r\n                        <Typography color= 'textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={recovered.value} duration={2} separator=','></CountUp>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant='body2'>Number of recoveries Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className= { cx(styles.card, styles.deaths) } >\r\n                    <CardContent>\r\n                        <Typography color= 'textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={deaths.value} duration={2} separator=','></CountUp>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant='body2'>Number of Deaths caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards; ","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data : { confirmed , recovered , deaths , lastUpdate } } = await axios.get(changeableUrl);\r\n      \r\n        return { confirmed , recovered , deaths , lastUpdate};\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data : { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, {useState , useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line , Bar } from 'react-chartjs-2';\r\n\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data : {confirmed , recovered , deaths},country}) => {\r\n\r\n    const [dailyData , setDailyData] = useState([]);\r\n\r\n    useEffect( () =>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        //console.log(dailyData);\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length \r\n        ? (\r\n            <Line \r\n            data= {{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets : [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label : 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label : 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor : 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n\r\n            }}\r\n        />) : null \r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data = {{\r\n                    labels: ['Infected', 'Recovered','Deaths'],\r\n                    datasets : [{\r\n                        label: 'People',\r\n                        backgroundColor : [\r\n                            ' rgba(0,0,255,0.5)',\r\n                            ' rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)'\r\n                            ],\r\n                        data : [confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}\r\n                options = {{\r\n                    legend : { display : false}, \r\n                    title: {display : true , text: `Current state in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return(\r\n        <div className = {styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React , {useEffect, useState} from 'react';\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries , setfetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n            setfetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    },[setfetchedCountries]);\r\n\r\n    //console.log(fetchedCountries);\r\n\r\n    return(\r\n        <FormControl className= {styles.formControl} >\r\n            <NativeSelect defaultValue='' onChange = {(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/corona.9e5d4fc7.png\";","import React from 'react';\r\n\r\nimport { Cards , Chart , CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/corona.png';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data : {},\r\n        country : '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data : fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        \r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({data : fetchedData, country : country});\r\n\r\n        //fetch the data\r\n        // set the state\r\n    }\r\n\r\n    render(){\r\n\r\n        const { data,country } = this.state;\r\n\r\n        return(\r\n            <div className = {styles.container}>\r\n                <img className={styles.image}   src= {coronaImage} alt=\"COVID-19\" />\r\n                <Cards data = {data} />\r\n                <CountryPicker handleCountryChange= {this.handleCountryChange} />\r\n                <Chart data={data} country = {country} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App /> , document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2ay0M\",\"image\":\"App_image__1y0Ey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3F_zK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2hFTg\"};"],"sourceRoot":""}